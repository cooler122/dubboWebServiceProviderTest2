<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zs.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.zs.po.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="mate_id" property="mateId" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="position_id" property="positionId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zs.po.User" extends="BaseResultMap" >
    <result column="information" property="information" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, name, age, mate_id, company_id, position_id
  </sql>
  <sql id="Blob_Column_List" >
    information
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zs.po.User" >
    insert into t_user (user_id, name, age, 
      mate_id, company_id, position_id, 
      information)
    values (#{userId,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{age,jdbcType=INTEGER}, 
      #{mateId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{positionId,jdbcType=INTEGER}, 
      #{information,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zs.po.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="mateId != null" >
        mate_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="positionId != null" >
        position_id,
      </if>
      <if test="information != null" >
        information,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="mateId != null" >
        #{mateId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null" >
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="information != null" >
        #{information,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zs.po.User" >
    update t_user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="mateId != null" >
        mate_id = #{mateId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="information != null" >
        information = #{information,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zs.po.User" >
    update t_user
    set name = #{name,jdbcType=CHAR},
      age = #{age,jdbcType=INTEGER},
      mate_id = #{mateId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      position_id = #{positionId,jdbcType=INTEGER},
      information = #{information,jdbcType=LONGVARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zs.po.User" >
    update t_user
    set name = #{name,jdbcType=CHAR},
      age = #{age,jdbcType=INTEGER},
      mate_id = #{mateId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      position_id = #{positionId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>